pipeline{
    agent {
        label 'AGENT-1'
    }
    environment{
        appVersion= ''
        REGION= "us-east-1"
        ACC_ID= ""
        PROJECT= "roboshop"


    }
    options{
        timeout(time:30, unit:'MINUTES')
        disableConcurrentBuilds()
        ansiColour('xterm')
    }
    stages{
        stage('init'){
            steps{
                script{
                     withAWS(credentials:'AWS-creds', region: "${REGION}") {
                        sh """
                            cd 70-ingress-alb
                            terraform init -reconfigure
                        """
                    }
                }
            }
        }
        stage('Plan'){
            steps{
                script{
                     withAWS(credentials:'AWS-creds', region: "${REGION}") {
                        sh """
                            cd 70-ingress-alb
                            terraform plan
                        """
                    }
                }
            }
        }
        stage('Apply'){
             input{
                message "should we countinue ?"
                ok "yes,we Should"
                submitter "Mr Jenkins"
            }
            steps{
                script{
                     withAWS(credentials:'AWS-creds', region: "${REGION}") {
                        sh """
                            cd 70-ingress-alb
                            terraform apply -auto-approve
                        """
                    }
                }
            }
        }
        /* stage('Trigger SG'){
            steps{
                script{
                    build job: '10-sg'
                    propagate: false
                    wait: false
                }
            }
        } */
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success {
            echo 'Pipeline was Success'
        }
        failure {
            echo 'Pipeline was Failure'
        }
    }
}